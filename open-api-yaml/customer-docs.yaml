openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8004
  description: Generated server url
paths:
  /rating/v1/{id}:
    put:
      tags:
      - rating-controller
      operationId: updateRating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRatingRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /company/v1/{id}:
    get:
      tags:
      - company-controller
      operationId: getCompanyById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseCompanyInfo'
      security:
      - bearerAuth: []
    put:
      tags:
      - company-controller
      operationId: updateCompany
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCompanyInfo'
  /tng/v1/{customerId}/provides-information-salary-receipt-date:
    post:
      tags:
      - tng-controller
      operationId: checkCustomerInformationSalaryReceiptDate
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseCheckIsPaydayByCustomerIdResponse'
  /tng/v1/provides-information-salary-receipt-date:
    post:
      tags:
      - tng-controller
      operationId: providesInformationSalaryReceiptDate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformationSalaryReceiptDateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /tng/v1/provides-information-salary-receipt-date-via-code-office:
    post:
      tags:
      - tng-controller
      operationId: providesInformationSalaryReceiptDateByOfficeCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformationSalaryReceiptDateByOfficeCodeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /tng/v1/provides-information-of-employees:
    post:
      tags:
      - tng-controller
      operationId: providesInformationOfEmployees
      parameters:
      - name: organizationName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tng/v1/check-is-employee-at-tng:
    post:
      tags:
      - tng-controller
      operationId: IsEmployeesWorkingAtTNG
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TNGRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /rating/v1/create-rating:
    post:
      tags:
      - rating-controller
      operationId: createRating
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRatingRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
  /notification/v1/{customerId}/notify-in-repayment-loan:
    post:
      tags:
      - notification-controller
      operationId: notifyCustomerHasInRepaymentLoan
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      - name: loanCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseBoolean'
  /notification/v1/notify-in-repayment-loan-by-template:
    post:
      tags:
      - notification-controller
      operationId: notifyCustomerHasInRepaymentLoanByTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseBoolean'
  /newsletter/v1/info:
    post:
      tags:
      - newsletter-controller
      operationId: saveInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsLetterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /kalapa/v2/{customerId}/id_card/plus:
    post:
      tags:
      - kalapa-v-2-controller
      operationId: extractInfo
      parameters:
      - name: verify
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: skipValidate
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KalapaRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseKalapaResponse'
  /kalapa/v1/id_card/plus:
    post:
      tags:
      - kalapa-controller
      operationId: extractInfo_1
      parameters:
      - name: verify
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KalapaRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseKalapaResponse'
  /info/v2/{customerId}/validate-confirm-information-request:
    post:
      tags:
      - info-v-2-controller
      operationId: validateConfirmInformationRequestV2
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmInformationV2Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v2/{customerId}/confirm-information:
    post:
      tags:
      - info-v-2-controller
      operationId: confirmInformationV2
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmInformationV2Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v2/{customerId}/additional-information:
    post:
      tags:
      - info-v-2-controller
      operationId: additionalInformationV2
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationV2Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/validate-confirm-information-request:
    post:
      tags:
      - info-controller
      operationId: validateConfirmInformationRequest
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmInformationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/update:
    post:
      tags:
      - info-controller
      operationId: putInfo
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfoRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/update-finance:
    post:
      tags:
      - info-controller
      operationId: updateFinance
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinancialData'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/return-confirm-information:
    post:
      tags:
      - info-controller
      operationId: returnConfirmInformation
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/request-get-tng-data:
    post:
      tags:
      - info-controller
      operationId: requestGetTngData
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTngDataRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/customer-sign-done:
    post:
      tags:
      - info-controller
      operationId: customerSignDone
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSignDoneRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/confirm-information:
    post:
      tags:
      - info-controller
      operationId: confirmInformation
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmInformationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/choose-company:
    post:
      tags:
      - info-controller
      operationId: chooseCompany
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChooseCompanyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /info/v1/{customerId}/additional-information:
    post:
      tags:
      - info-controller
      operationId: additionalInformation
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /company/v1/add:
    post:
      tags:
      - company-controller
      operationId: createCompany
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCompanyInfo'
      security:
      - bearerAuth: []
  /rating/v1/get-all-ratings:
    get:
      tags:
      - rating-controller
      operationId: getAllRatings
      parameters:
      - name: customerId
        in: query
        required: true
        schema:
          type: string
      - name: applicationType
        in: query
        required: true
        schema:
          type: string
      - name: isRated
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseRating'
  /info/v1/{customerId}:
    get:
      tags:
      - info-controller
      operationId: getInfo
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      - name: category
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseCustomerInfoResponse'
  /company/v1/get-list:
    get:
      tags:
      - company-controller
      operationId: getListCompany
      parameters:
      - name: groupName
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListCompanyInfo'
      security:
      - bearerAuth: []
  /approval-letter/v1/{customerId}:
    get:
      tags:
      - approval-letter-controller
      operationId: getListApprovalLetterByCustomerId
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListApprovalLetter'
      security:
      - bearerAuth: []
  /approval-letter/v1/{customerId}/latest:
    get:
      tags:
      - approval-letter-controller
      operationId: getApprovalLetterByCustomerId
      parameters:
      - name: customerId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseApprovalLetter'
      security:
      - bearerAuth: []
  /company/v1/{companyId}:
    delete:
      tags:
      - company-controller
      operationId: deleteCompany
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
components:
  schemas:
    UpdateRatingRequest:
      type: object
      properties:
        rate:
          type: string
          enum:
          - NOT_SATISFIED
          - SEMI_SATISFIED
          - NORMAL
          - SATISFIED
          - VERY_SATISFIED
        customerOpinion:
          type: string
    ApiResponseString:
      type: object
      properties:
        result:
          type: string
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
        groupName:
          type: string
        code:
          type: string
        avatar:
          type: string
          format: binary
        createdBy:
          type: string
        taxCode:
          type: string
        businessCode:
          type: string
        mobile:
          type: string
        owner:
          type: string
        address:
          type: string
        payday:
          type: integer
          format: int32
    ApiResponseCompanyInfo:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CompanyInfo'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CompanyInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        groupName:
          type: string
        code:
          type: string
        taxCode:
          type: string
        businessCode:
          type: string
        mobile:
          type: string
        owner:
          type: string
        address:
          type: string
        payday:
          type: integer
          format: int32
        avatar:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    ApiResponseCheckIsPaydayByCustomerIdResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CheckIsPaydayByCustomerIdResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CheckIsPaydayByCustomerIdResponse:
      type: object
      properties:
        isPayday:
          type: string
        personalData:
          $ref: '#/components/schemas/PersonalData'
    PersonalData:
      type: object
      properties:
        firstName:
          type: string
        gender:
          type: string
        dateOfBirth:
          type: string
        identityNumberSix:
          type: string
        emailAddress:
          type: string
        mobileNumber:
          type: string
        addressTwoLine1:
          type: string
        addressOneLine1:
          type: string
        borrowerDetailTextVariable1:
          type: string
        maritalStatus:
          type: string
        educationType:
          type: string
        coreUserId:
          type: string
        note:
          type: string
        idDocumentType:
          type: string
        identityNumberOne:
          type: string
        idIssuePlace:
          type: string
        idIssueDate:
          type: string
        idFeatures:
          type: string
        idExpiredDate:
          type: string
        idOrigin:
          type: string
        companyId:
          type: string
        officeCode:
          type: string
        organizationName:
          type: string
        officeName:
          type: string
        annualIncome:
          type: number
          format: float
        workingDay:
          type: number
          format: float
        borrowerEmploymentHistoryTextVariable1:
          type: string
        stepOne:
          type: string
        stepTwoIndividual:
          type: string
        stepThreeEmployment:
          type: string
        paydayLoanStatus:
          type: string
        errorGetTngInfo:
          type: boolean
        collateralDocument:
          type: string
        salaryDocument1:
          type: string
        salaryDocument2:
          type: string
        salaryDocument3:
          type: string
        approvalLetterId:
          type: string
        frontId:
          type: string
        backId:
          type: string
        selfie:
          type: string
        frontIdTwo:
          type: string
        backIdTwo:
          type: string
    InformationSalaryReceiptDateRequest:
      required:
      - employee_code
      type: object
      properties:
        employee_code:
          type: string
    ApiResponseObject:
      type: object
      properties:
        result:
          type: object
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    InformationSalaryReceiptDateByOfficeCodeRequest:
      required:
      - officeCode
      type: object
      properties:
        officeCode:
          type: string
    ApiResponse:
      type: object
      properties:
        result:
          type: object
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    TNGRequest:
      required:
      - employeeCode
      type: object
      properties:
        employeeCode:
          type: string
    CreateRatingRequest:
      required:
      - applicationId
      - customerId
      type: object
      properties:
        customerId:
          type: string
        applicationId:
          type: string
        applicationType:
          type: string
          enum:
          - PDL_TNG
          - PDL_HMG
          - INSURANCE
    ApiResponseBoolean:
      type: object
      properties:
        result:
          type: boolean
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    TemplateRequest:
      required:
      - customerId
      - templateName
      type: object
      properties:
        templateName:
          type: string
        customerId:
          type: string
        amount:
          type: string
    NewsLetterRequest:
      required:
      - email
      type: object
      properties:
        info:
          type: object
          additionalProperties:
            type: string
        email:
          type: string
    KalapaRequest:
      required:
      - image
      - image_back
      - image_selfie
      type: object
      properties:
        image:
          type: string
          format: binary
        image_selfie:
          type: string
          format: binary
        image_back:
          type: string
          format: binary
    ApiResponseKalapaResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/KalapaResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    FraudCheck:
      type: object
      properties:
        facesMatched:
          type: integer
          format: int32
        floatingMark:
          type: boolean
        screenPhoto:
          type: boolean
        blacklist:
          type: boolean
        abnormalText:
          type: boolean
        abnormalFace:
          type: boolean
        cornerCut:
          type: boolean
    IdCardInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        dob:
          type: string
        home:
          type: string
        expiredDate:
          type: string
        documentType:
          type: string
        dateOfIssue:
          type: string
        features:
          type: string
        gender:
          type: string
        placeOfIssue:
          type: string
    KalapaResponse:
      type: object
      properties:
        createdAt:
          type: string
        idCardInfo:
          $ref: '#/components/schemas/IdCardInfo'
        taxName:
          type: string
        verified:
          type: boolean
        selfieCheck:
          $ref: '#/components/schemas/SelfieCheck'
        fraudCheck:
          $ref: '#/components/schemas/FraudCheck'
    SelfieCheck:
      type: object
      properties:
        matched:
          type: boolean
        matchingScore:
          type: integer
          format: int32
    ConfirmInformationV2Request:
      required:
      - addressOneLine1
      - addressTwoLine1
      - dateOfBirth
      - emailAddress
      - firstName
      - gender
      - idIssuePlace
      - identityNumberOne
      - identityNumberSix
      type: object
      properties:
        firstName:
          type: string
        dateOfBirth:
          type: string
        gender:
          type: string
        identityNumberSix:
          type: string
        identityNumberOne:
          type: string
        addressTwoLine1:
          type: string
        addressOneLine1:
          type: string
        emailAddress:
          type: string
        idIssuePlace:
          type: string
        coreUserId:
          type: string
    AdditionalInformationV2Request:
      required:
      - annualIncome
      - borrowerDetailTextVariable1
      - borrowerEmploymentHistoryTextVariable1
      - educationType
      - maritalStatus
      type: object
      properties:
        maritalStatus:
          type: string
        educationType:
          type: string
        borrowerDetailTextVariable1:
          type: string
        borrowerEmploymentHistoryTextVariable1:
          type: string
        annualIncome:
          maximum: 500000000
          minimum: 1000000
          type: number
          format: float
    ConfirmInformationRequest:
      required:
      - addressOneLine1
      - addressTwoLine1
      - dateOfBirth
      - emailAddress
      - firstName
      - gender
      - idIssuePlace
      - identityNumberOne
      - identityNumberSix
      - organizationName
      type: object
      properties:
        firstName:
          type: string
        dateOfBirth:
          type: string
        gender:
          type: string
        identityNumberSix:
          type: string
        identityNumberOne:
          type: string
        addressTwoLine1:
          type: string
        addressOneLine1:
          type: string
        emailAddress:
          type: string
        organizationName:
          type: string
        idIssuePlace:
          type: string
        coreUserId:
          type: string
    UpdateInfoRequest:
      type: object
      properties:
        info:
          type: object
          additionalProperties:
            type: object
    FinancialData:
      type: object
      properties:
        bankName:
          type: string
        bankCode:
          type: string
        accountNumber:
          type: string
    GetTngDataRequest:
      required:
      - documentPath
      type: object
      properties:
        documentPath:
          type: string
    CustomerSignDoneRequest:
      required:
      - idDocument
      - idRequest
      type: object
      properties:
        approvalLetterId:
          type: string
        idRequest:
          type: integer
          format: int32
        idDocument:
          type: integer
          format: int32
    ChooseCompanyRequest:
      required:
      - companyId
      type: object
      properties:
        companyId:
          type: string
    AdditionalInformationRequest:
      required:
      - borrowerDetailTextVariable1
      - borrowerEmploymentHistoryTextVariable1
      - educationType
      - maritalStatus
      type: object
      properties:
        maritalStatus:
          type: string
        educationType:
          type: string
        borrowerDetailTextVariable1:
          type: string
        borrowerEmploymentHistoryTextVariable1:
          type: string
    CompanyRequest:
      required:
      - groupName
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        groupName:
          type: string
        avatar:
          type: string
          format: binary
        taxCode:
          type: string
        businessCode:
          type: string
        mobile:
          type: string
        owner:
          type: string
        address:
          type: string
        payday:
          type: integer
          format: int32
        createdBy:
          type: string
        updatedBy:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        code:
          type: string
    ApiResponseRating:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Rating'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Rating:
      type: object
      properties:
        id:
          type: string
        applicationId:
          type: string
        applicationType:
          type: string
        rate:
          type: string
        customerOpinion:
          type: string
        customerId:
          type: string
        rated:
          type: boolean
    ApiResponseCustomerInfoResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CustomerInfoResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CustomerInfoResponse:
      type: object
      properties:
        personalData:
          $ref: '#/components/schemas/PersonalData'
        financialData:
          $ref: '#/components/schemas/FinancialData'
        kalapaData:
          $ref: '#/components/schemas/KalapaResponse'
        tngData:
          $ref: '#/components/schemas/TNGInformationResponse'
    TNGInformationResponse:
      type: object
      properties:
        createdAt:
          type: string
        hoDem:
          type: string
        ten:
          type: string
        maDonVi:
          type: string
        tenDonVi:
          type: string
        theATM:
          type: string
        maNganHang:
          type: string
        tenNganHang:
          type: string
        thuNhap:
          type: string
        soCong:
          type: string
        maNS:
          type: string
    ApiResponseListCompanyInfo:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/CompanyInfo'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponseListApprovalLetter:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalLetter'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApprovalLetter:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        idRequest:
          type: integer
          format: int32
        idDocument:
          type: integer
          format: int32
        customerId:
          type: string
        path:
          type: string
        customerSignDone:
          type: boolean
        created_at:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
    ApiResponseApprovalLetter:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ApprovalLetter'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
